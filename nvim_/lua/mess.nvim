-----------------------------------------------------------
-- General Neovim settings and configuration
-----------------------------------------------------------

-- Default options are not included
-- See: https://neovim.io/doc/user/vim_diff.html
-- [2] Defaults - *nvim-defaults*

local g = vim.g       -- Global variables
local opt = vim.opt   -- Set options (global/buffer/windows-scoped)
local global = vim.o  -- Set options (global)
local window = vim.wo -- Set options (windows-scoped)
local buffer = vim.bo -- Set options (buffer)
local cmd = vim.cmd   -- vim Commands

-----------------------------------------------------------
-- General
-----------------------------------------------------------
mouse = 'a'                       -- Enable mouse support
clipboard = 'unnamedplus'         -- Copy/paste to system clipboard
swapfile = false                  -- Don't use swapfile
-----------------------------------------------------------
-- Neovim UI
-----------------------------------------------------------
colorcolumn = {80, 120}
termguicolors = true
-----------------------------------------------------------
-- Tabs, indent
-----------------------------------------------------------
expandtab = true        -- Use spaces instead of tabs
shiftwidth = 4          -- Shift 4 spaces when tab
tabstop = 4             -- 1 tab == 4 spaces
autoindent = true       -- Copyindent from current line
smartindent = true      -- Autoindent new lines
-----------------------------------------------------------
-- Performance
-----------------------------------------------------------
hidden = false          -- Disable background buffers
history = 100           -- Remember N lines in history
lazyredraw = true       -- Faster scrolling
synmaxcol = 240         -- Max column for syntax highlight
updatetime = 300        -- Faster completion (4000ms default)
-----------------------------------------------------------
-- Startup
-----------------------------------------------------------
-- Disable nvim intro
shortmess:append "sI"

ignorecase = true
smartcase = true

filencoding = "utf-8" -- the encoding written to a file


hlsearch = false

-- Disable builtins plugins
local disabled_built_ins = {
   "2html_plugin",
   "getscript",
   "getscriptPlugin",
   "gzip",
   "logipat",
   "netrw",
   "netrwPlugin",
   "netrwSettings",
   "netrwFileHandlers",
   "matchit",
   "tar",
   "tarPlugin",
   "rrhelper",
   "spellfile_plugin",
   "vimball",
   "vimballPlugin",
   "zip",
   "zipPlugin",
   "python3_provider",
   "python_provider",
   "node_provider",
   "ruby_provider",
   "perl_provider",
   "tutor",
   "rplugin",
   "syntax",
   "synmenu",
   "optwin",
   "compiler",
   "bugreport",
   "ftplugin",
}

for _, plugin in pairs(disabled_built_ins) do
  g["loaded_" .. plugin] = 1
end









https://github.com/GideonWolfe/nvim-lua/blob/main/lua/settings.lua

https://github.com/brainfucksec/neovim-lua

https://github.com/NvChad/NvChad/blob/main/lua/core/options.lua
                                                                                                                

local options = {
  backup = false,                          -- creates a backup file
  clipboard = "unnamedplus",               -- allows neovim to access the system clipboard
  cmdheight = 1,                           -- more space in the neovim command line for displaying messages
  completeopt = { "menuone", "noselect" }, -- mostly just for cmp
  conceallevel = 0,                        -- so that `` is visible in markdown files
  -- colorcolumn = "80",
  -- colorcolumn = "120",
  fileencoding = "utf-8",                  -- the encoding written to a file
  hlsearch = true,                         -- highlight all matches on previous search pattern
  ignorecase = true,                       -- ignore case in search patterns
  mouse = "a",                             -- allow the mouse to be used in neovim
  pumheight = 10,                          -- pop up menu height
  showmode = false,                        -- we don't need to see things like -- INSERT -- anymore
  showtabline = 0,                         -- always show tabs
  smartcase = true,                        -- smart case
  smartindent = true,                      -- make indenting smarter again
  splitbelow = true,                       -- force all horizontal splits to go below current window
  splitright = true,                       -- force all vertical splits to go to the right of current window
  swapfile = false,                        -- creates a swapfile
  termguicolors = true,                    -- set term gui colors (most terminals support this)
  timeoutlen = 100,                        -- time to wait for a mapped sequence to complete (in milliseconds)
  undofile = true,                         -- enable persistent undo
  updatetime = 300,                        -- faster completion (4000ms default)
  writebackup = false,                     -- if a file is being edited by another program (or was written to file while editing with another program), it is not allowed to be edited
  expandtab = true,                        -- convert tabs to spaces
  shiftwidth = 4,                          -- the number of spaces inserted for each indentation
  tabstop = 4,                             -- insert 4 spaces for a tab
  cursorline = true,                       -- highlight the current line
  number = true,                           -- set numbered lines
  laststatus = 3,
  showcmd = false,
  ruler = false,
  -- relativenumber = true,                -- set relative numbered lines
  numberwidth = 4,                         -- set number column width to 2 {default 4}
  signcolumn = "yes",                      -- always show the sign column, otherwise it would shift the text each time
  wrap = false,                            -- display lines as one long line
  scrolloff = 8,                           -- when scrolling keep cursor in the middle
  sidescrolloff = 8,
  guifont = "monospace:h17",               -- the font used in graphical neovim applications

}
vim.g.loaded_netrw = 1
vim.g.loaded_netrwPlugin = 1
vim.opt.fillchars.eob=" "

vim.opt.shortmess:append "c"

for k, v in pairs(options) do
  vim.opt[k] = v
end

vim.cmd "set whichwrap+=<,>,[,],h,l"
vim.cmd [[set iskeyword+=-]]
vim.cmd [[set formatoptions-=cro]] -- TODO: this doesn't seem to work

vim.filetype.add({
    extension = {
      conf = "dosini",
  },
})

-- vim: ft=lua:foldmethod=marker:expandtab:ts=4:shiftwidth=4
